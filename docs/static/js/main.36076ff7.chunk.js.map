{"version":3,"sources":["components/08-useReducer/todoReducer.js","components/08-useReducer/TodoListItem.js","components/08-useReducer/TodoList.js","hooks/useForm.js","components/08-useReducer/TodoForm.js","components/08-useReducer/TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoListItem","item","index","handleDelete","handleToggle","key","className","onClick","descripcion","TodoList","toDos","useForm","initialState","useState","formValues","setFormValues","handleInputChange","target","name","value","reset","TodoForm","handleAddToDo","description","onSubmit","e","preventDefault","newTodo","Date","getTime","placeholder","autoComplete","onChange","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","length","todoId","toDo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36076ff7.chunk.js","sourcesContent":["\r\n\r\nexport const todoReducer = (state = [], action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'add':\r\n            return [...state, action.payload]\r\n\r\n        case 'delete':\r\n            return state.filter(todo => todo.id !== action.payload);\r\n\r\n        case 'modify':\r\n            return state.map(todo => {\r\n\r\n                if (todo.id === action.payload) {\r\n                    return {\r\n                        ...todo,\r\n                        done: !todo.done\r\n                    }\r\n                } else {\r\n                    return todo;\r\n                }\r\n            })\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n}","import React from 'react'\r\n\r\nconst TodoListItem = ( {item, index, handleDelete, handleToggle} ) => {\r\n\r\n    return (\r\n        <li key={item.id} className=\"list-group-item\">\r\n                    \r\n            <p className={ `${item.done && 'complete'}` } onClick={ () => handleToggle(item.id)}>\r\n            {index + 1} - {item.descripcion}\r\n            \r\n            </p>\r\n\r\n            <button className=\"btn btn-danger\"\r\n                    onClick={ () => handleDelete( item.id ) }\r\n            >Borrar\r\n            \r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default TodoListItem\r\n","import React from 'react'\r\nimport TodoListItem from './TodoListItem'\r\n\r\nconst TodoList = ({ toDos, handleDelete, handleToggle }) => {\r\n    return (\r\n        \r\n        <ul className=\"list-group list-group-flush\">\r\n        {\r\n            toDos.map((item, index) => (\r\n                <TodoListItem \r\n                    key = {item.id}\r\n                    item         = { item }\r\n                    index        = { index }\r\n                    handleDelete = { handleDelete }\r\n                    handleToggle = { handleToggle }\r\n\r\n                />\r\n            ))\r\n        }\r\n\r\n    </ul>\r\n        \r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import { useState } from \"react\"\r\n\r\n\r\nconst useForm = ( initialState = {} ) => {\r\n\r\n    const [formValues, setFormValues] = useState( initialState )\r\n\r\n   \r\n    const handleInputChange = ({ target }) =>{\r\n\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value //Se setet\r\n        })\r\n\r\n    }\r\n\r\n    const reset = () =>{\r\n        setFormValues( initialState );\r\n    }\r\n\r\n    return [ formValues, handleInputChange, reset ];\r\n}\r\n\r\nexport default useForm\r\n","import React from 'react'\r\nimport useForm from '../../hooks/useForm';\r\n\r\nconst TodoForm = ({handleAddToDo}) => {\r\n\r\n    const [formValues, handleInputChange, reset] = useForm({\r\n        description: ''\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); //Previene el refresh de la p√°gina\r\n\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            descripcion: formValues.description,\r\n            done: false\r\n        }\r\n        \r\n        handleAddToDo( newTodo );\r\n        reset();\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h4>Agregar ToDo</h4>\r\n            <hr />\r\n\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                <input type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"description\"\r\n                    placeholder=\"Aprender...\"\r\n                    autoComplete=\"off\"\r\n                    value={formValues.description}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button className=\"btn btn-outline-primary btn-block mt-3\" type=\"submit\">\r\n                    Agregar\r\n                </button>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import React, { useReducer, useEffect } from 'react'\r\nimport { todoReducer } from './todoReducer';\r\nimport TodoList from './TodoList';\r\nimport TodoForm from './TodoForm';\r\nimport './styles.css'\r\n\r\n// const initialState = [{\r\n//     id: new Date().getTime(),\r\n//     descripcion: 'Aprender React',\r\n//     done: false\r\n// }]\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('todos')) || [];\r\n}\r\n\r\nconst TodoApp = () => {\r\n\r\n    const [ toDos, dispatch ] = useReducer(todoReducer, [], init);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        localStorage.setItem('todos', JSON.stringify( toDos ));\r\n        \r\n    }, [toDos])\r\n\r\n\r\n    const handleDelete = ( todoId ) =>{\r\n        \r\n        dispatch( {\r\n            type: 'delete',\r\n            payload: todoId\r\n        } );\r\n\r\n    }\r\n\r\n    const handleToggle = ( todoId ) => {\r\n\r\n        dispatch({\r\n            type: 'modify',\r\n            payload: todoId\r\n        })\r\n    }\r\n\r\n\r\n    const handleAddToDo = ( toDo ) => {\r\n\r\n        dispatch ({\r\n            type: 'add',\r\n            payload: toDo\r\n        });\r\n        \r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>ToDo App ( {toDos.length} )</h1>\r\n        <hr />\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-7\">\r\n            <TodoList\r\n              toDos={toDos}\r\n              handleDelete={handleDelete}\r\n              handleToggle={handleToggle}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-5\">\r\n            <TodoForm handleAddToDo={handleAddToDo} />\r\n          </div>\r\n            </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default TodoApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import HookApp from './HookApp';\n//import CounterApp from './components/01-useState/CounterApp';\n//import CounterWithCustomHook from './components/01-useState/CounterWithCustomHook';\n//import SimpleForm from './components/02-useEffect/SimpleForm';\n//import FormWithCustomHook from './components/02-useEffect/FormWithCustoHook';\n//import MultipleCustomHooks from './components/03-examples/MultipleCustomHooks';\n//import FocusScreen from './components/04-useRef/FocusScreen';\n//import RealExampleRef from './components/04-useRef/RealExampleRef';\n//import Layout from './components/05-useLayoutEffect/Layout';\n//import Memorize from './components/06-Memos/Memorize';\n//import MemoHook from './components/06-Memos/MemoHook';\n//import CallbackHook from './components/06-Memos/CallbackHook';\n//import { Padre } from './components/07-tarea-memo/Padre';\nimport TodoApp from './components/08-useReducer/TodoApp';\n\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}